.section .data
	.global code		# short code;
	.global currentSalary	# short currentSalary;

	.equ	RAISE_20, 400
	.equ	RAISE_21, 300
	.equ	RAISE_22, 200
	.equ	RAISE_DEFAULT, 150


.section .rodata
	.align 4
jmp_table:
	.long	code20	# 0
	.long	code21	# 1
	.long	code22	# 2


.section .text
	.global new_salary	# int new_salary(void);

new_salary:
	movl	currentSalary(%rip), %eax
	movl	code(%rip), %ecx	# copy variable to register
	cmp	$22, %ecx		# compare to 22 (set flags)
	ja	default			# if > jump to default
	cmp	$20, %ecx		# compare to 20 (set flags)
	jb	default			# if < jump to default
	subl	$20, %ecx		# subtract 20 from code, starting point of jump table is 0
	jmp	*jmp_table(,%ecx,8)


default:
	addl	$RAISE_DEFAULT, %eax
	ret
code20:
	addl	$RAISE_20, %eax
	ret
code21:
	addl	$RAISE_21, %eax
	ret
code22:
	addl	$RAISE_22, %eax
	ret

